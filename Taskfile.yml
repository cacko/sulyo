# https://taskfile.dev

version: "3"

vars:
  PROJECT: sulyo

dotenv: ['.env']

tasks:
  default:
    cmds:
      - mamba run --live-stream -n {{.PROJECT}} python -m {{.PROJECT}}
    silent: true

  signalcli:
    cmds:
      - signal-cli -a $SIGNAL_ACCOUNT daemon --socket $SIGNAL_SOCKET

  redis:
    desc: open redis-cli
    cmds:
      - redis-cli $REDIS_CLI

  logs:
    desc: monitor logs
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;journalctl -u {{.PROJECT}} -f --all'

  start:
    desc: start the service
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;systemctl start {{.PROJECT}}'

  restart:
    desc: restart the service
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;systemctl restart {{.PROJECT}}'

  stop:
    desc: stop the server
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;systemctl stop {{.PROJECT}}'

  push:
    desc: commit and pushes current changes
    cmds:
      - git add .  || true
      - git commit -am "$(curl -s https://commit.cacko.net/index.txt)" || true
      - git push  || true

  pull:
    desc: pulls from git
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;cd ~/local/{{.PROJECT}};git reset --hard;git pull'

  pp:
    desc: push and pull
    cmds:
      - task: push
      - task: pull

  install:
    desc: calls poetry install and npm ci
    cmds:
      - ssh $REMOTE_HOST 'source ~/.profile;cd /local/{{.PROJECT}}; mamba env update -n {{.PROJECT}} -f environment.yml --prune'

  update:
    desc: update package
    cmds:
      - mamba run --live-stream -n {{.PROJECT}} pip install {{.CLI_ARGS}} -U
      - task: export
      - sed -i '' -e '/libcxx/d' environment.yml
      - task: pp
      - task: install
      - task: deploy


  deploy:
    desc: shortcut for stop -> push -> pull -> restart
    cmds:
      - task: stop
      - task: push
      - task: pull
      - task: restart

  systemd-exec:
    desc: run the server
    cmds:
      - direnv exec . mamba run --live-stream -n {{.PROJECT}} python -m {{.PROJECT}}

  export:
    desc: export env
    cmds:
      - conda env export --no-builds --ignore-channels  -n {{.PROJECT}} > environment.yml
